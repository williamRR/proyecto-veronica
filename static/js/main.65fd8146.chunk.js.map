{"version":3,"sources":["auth/PrivateRoute.js","Pages/Home.js","utils/constants/headers/pupilsHeaders.js","components/dataTable/DataTableHeader.js","utils/capitalizeWordsOnSentence.js","components/Loading.js","components/dataTable/DataTableBody.js","components/dataTable/DataTable.js","utils/parsers/attendanceParser.js","utils/routes.config.js","Pages/Attendance.js","Router.js","utils/mainApplicationTheme.js","App.js","index.js"],"names":["PrivateRoute","Component","component","rest","publicAccess","hasRole","Home","history","useHistory","Grid","item","container","xs","justify","alignContent","style","minHeight","Button","variant","color","onClick","push","marginTop","planningHeaders","att","label","root","entity","computed","makeStyles","theme","head","backgroundColor","palette","common","white","maxWidth","minWidth","columnLabel","capitalizeWordsOnSentence","loading","spacing","button","fill","width","height","display","fontSize","transition","flexShrink","userSelect","table","marginBottom","selected","primary","main","link","cursor","planningDetails","maxHeight","border","breakpoints","up","planning","tracking","trackingDetails","footerContainer","borderBottom","pagination","overflow","sentence","ret","split","forEach","word","newWord","charAt","toUpperCase","concat","slice","length","toLowerCase","attendanceParser","results","newResults","pupil","newObject","name","lastname","pupilId","id","present","routes","route","public","useState","pupils","setPupils","isDataLoading","setIsDataLoading","useEffect","axios","get","then","res","data","console","log","Typography","DateTime","now","toLocaleString","TableContainer","Table","size","stickyHeader","TableHead","TableRow","pupilsHeaders","map","header","TableCell","align","TableBody","colSpan","CircularProgress","row","padding","FormControlLabel","control","Switch","checked","onChange","newPupil","find","newPupils","splice","indexOf","_","sortBy","changeAttendance","post","listOfAttendance","date","subject","Router","exact","path","createTheme","shadows","props","MuiButtonBase","disableRipple","zIndex","appBar","modal","typography","fontFamily","join","text","secondary","App","maxSnack","transitionDuration","appear","enter","exit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65fd8146.chunk.js","sourcesContent":["import React, { useCallback } from \"react\"\nimport { Redirect, Route } from \"react-router\"\n// import * as appDispatcher from \"./../redux/actions/planningDispatcher\"\n// import jwt_decode from \"jwt-decode\"\n// import NotFound404 from \"components/NotFound404\"\n\nconst PrivateRoute = ({\n  component: Component,\n  publicAccess,\n  hasRole,\n  ...rest\n}) => {\n  // const { user, setUser } = appDispatcher.useUser()\n\n  // let userPermissions\n\n  // const parseToken = useCallback(\n  //   (tkn) => {\n  //     let decoded = jwt_decode(tkn)\n  //     const { permissions, user } = decoded\n  //     const newPermissions = JSON.parse(permissions).permissions\n  //     localStorage.setItem(\"idToken\", tkn)\n  //     setUser({\n  //       ...JSON.parse(user),\n  //       permissions: newPermissions[0].accesses,\n  //       token: tkn,\n  //       apiKey: process.env.REACT_APP_API_KEY,\n  //     })\n  //     return newPermissions[0].accesses\n  //   },\n  //   [setUser]\n  // )\n\n  // if (!user && localStorage.getItem(\"idToken\")) {\n  //   userPermissions = parseToken(localStorage.getItem(\"idToken\"))\n  // }\n\n  // if (publicAccess)\n  //   return (\n  //     <Route {...rest}>\n  //       <Component />\n  //     </Route>\n  //   )\n\n  // if (!user && !localStorage.getItem(\"idToken\")) return <Redirect to=\"/\" />\n\n  // if (\n  //   hasRole &&\n  //   (user?.permissions?.includes(hasRole) || userPermissions?.includes(hasRole))\n  // )\n  return (\n    <Route {...rest}>\n      <Component />\n    </Route>\n  )\n  // else if (hasRole) return <Redirect to=\"/forbidden\" />\n  // else\n  //   return (\n  //     <Route>\n  //       <NotFound404 />\n  //     </Route>\n  //   )\n}\n\nexport default PrivateRoute\n","import { Button, Grid } from \"@material-ui/core\"\nimport React from \"react\"\nimport { Link, useHistory } from \"react-router-dom\"\n\nconst Home = () => {\n  let history = useHistory()\n  return (\n    <Grid\n      item\n      container\n      xs={12}\n      justify=\"center\"\n      alignContent=\"center\"\n      style={{ minHeight: \"100vh\" }}\n    >\n      <Grid item xs={12} container justify=\"center\">\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={() => history.push(\"/proyecto-veronica/attendance\")}\n        >\n          Tomar Asistencia\n        </Button>\n      </Grid>\n\n      <Grid item xs={12} container justify=\"center\" style={{ marginTop: 10 }}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => history.push(\"/proyecto-veronica/attendance\")}\n        >\n          Ver hist√≥rico\n        </Button>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default Home\n","const planningHeaders = [\n  {\n    att: \"name\",\n    label: \"Nombre Alumno\",\n    root: \"name\",\n    entity: \"pupil\",\n    computed: false,\n  },\n  {\n    att: \"present\",\n    label: \"Asistencia\",\n    computed: true,\n  },\n]\n\nexport default planningHeaders\n","import React from \"react\"\nimport {\n  TableHead,\n  TableRow,\n  TableCell,\n  TableSortLabel,\n  makeStyles,\n} from \"@material-ui/core\"\n\nconst useStyle = makeStyles((theme) => ({\n  head: {\n    backgroundColor: \"#333333\",\n    color: theme.palette.common.white,\n    maxWidth: 170,\n    minWidth: 170,\n  },\n  columnLabel: {\n    color: \"white\",\n    \"&:active, &.MuiTableSortLabel-active, &.MuiTableSortLabel-active.MuiTableSortLabel-root.MuiTableSortLabel-active\":\n      {\n        color: theme.palette.common.white,\n      },\n  },\n}))\n\nconst DataTableHeader = ({ newHeaders, sort, setPaginator }) => {\n  const classes = useStyle()\n\n  const evaluateSort = (header) => {\n    return sort?.field === header?.root && sort?.entity === header?.entity\n  }\n\n  const handleClick = (header) => {\n    if (!header.computed) {\n      setPaginator(header, \"sort\")\n    }\n  }\n\n  return (\n    <TableHead>\n      <TableRow>\n        {newHeaders.map((header) => {\n          return (\n            <TableCell\n              className={classes.head}\n              key={header.att}\n              padding={\"none\"}\n              align=\"center\"\n              // sortDirection={evaluateSort(header) ? sort.order : false}\n            >\n              {/* <TableSortLabel\n                classes={{ root: classes.columnLabel }}\n                active={header.computed ? null : evaluateSort(header)}\n                direction={evaluateSort(header) ? sort?.order : \"asc\"}\n                onClick={() => handleClick(header)}\n              > */}\n              {header.label}\n              {/* </TableSortLabel> */}\n            </TableCell>\n          )\n        })}\n      </TableRow>\n    </TableHead>\n  )\n}\n\nexport default DataTableHeader\n","const capitalizeWordsOnSentence = (sentence) => {\n  let ret = \"\"\n\n  let arrayOfWords = sentence.split(\" \")\n  arrayOfWords.forEach((word) => {\n    let newWord = word\n      .charAt(0)\n      .toUpperCase()\n      .concat(word.slice(1, word.length).toLowerCase())\n    ret = ret.concat(\" \").concat(newWord)\n  })\n\n  return ret\n}\n\nexport default capitalizeWordsOnSentence\n","import React, { useCallback } from \"react\"\nimport { Grid, makeStyles, CircularProgress } from \"@material-ui/core\"\n\nconst Loading = ({ context }) => {\n  const classes = useStyle()\n\n  const getContext = useCallback(() => {\n    const BUTTON_CONTEXT = {\n      button: classes.button,\n      table: classes.table,\n      loading: classes.loading,\n    }\n    return BUTTON_CONTEXT[context]\n  }, [classes.button, classes.table, classes.loading, context])\n\n  return (\n    <>\n      <Grid container item xs={12} justify=\"center\" alignContent=\"center\">\n        <CircularProgress className={getContext()} />\n      </Grid>\n    </>\n  )\n}\n\nconst useStyle = makeStyles((theme) => ({\n  loading: {\n    marginTop: theme.spacing(20),\n  },\n  button: {\n    fill: \"currentColor\",\n    width: \"1em\",\n    height: \"1em\",\n    display: \"inline-block\",\n    fontSize: \"1.3928571428571428rem\",\n    transition: \"fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n    flexShrink: 0,\n    userSelect: \"none\",\n  },\n  table: {\n    marginTop: theme.spacing(23),\n    marginBottom: theme.spacing(20),\n  },\n}))\nexport default Loading\n","import React, { useCallback } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport {\n  TableRow,\n  TableCell,\n  TableBody,\n  Link,\n  Typography,\n  makeStyles,\n  Tooltip,\n  Grid,\n  IconButton,\n  withStyles,\n  FormControl,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  FormGroup,\n  Switch,\n} from \"@material-ui/core\"\nimport areTwoObjectsEqual from \"utils/areTwoObjectsEqual\"\nimport Loading from \"components/Loading\"\nimport VisibilityIcon from \"@material-ui/icons/Visibility\"\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\"\nimport { useSnackbar } from \"notistack\"\n\nconst useStyle = makeStyles((theme) => ({\n  selected: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.common.white,\n  },\n  link: {\n    cursor: \"pointer\",\n  },\n}))\n\nconst DataTableBody = ({\n  rows,\n  emptyMessage,\n  selected,\n  url,\n  newHeaders,\n  path,\n  setSelected,\n  loading,\n  selectable,\n}) => {\n  const history = useHistory()\n  const classes = useStyle()\n  const { enqueueSnackbar } = useSnackbar()\n\n  const handleClick = useCallback(\n    (row, header) => {\n      let newUrl = \"/\" + path + \"/\" + row[`${header.att}`]\n      history.push(newUrl)\n    },\n    [history, path]\n  )\n\n  const getStyle = (row) => {\n    if (areTwoObjectsEqual(row, selected)) return classes.selected\n    return null\n  }\n\n  const unselectLogic = (row) => {\n    if (areTwoObjectsEqual(row, selected)) setSelected(null)\n    else setSelected(row)\n  }\n\n  const HtmlTooltip = withStyles((theme) => ({\n    tooltip: {\n      backgroundColor: \"#f5f5f9\",\n      color: \"rgba(0, 0, 0, 0.87)\",\n      minWidth: 150,\n      fontSize: theme.typography.pxToRem(12),\n      border: \"1px solid black\",\n    },\n  }))(Tooltip)\n\n  const renderUrl = (row, header) => {\n    if (header.att === \"present\")\n      return (\n        <TableCell\n          className={getStyle(row)}\n          padding={\"none\"}\n          key={header.att}\n          size=\"small\"\n          align=\"center\"\n        >\n          <FormGroup>\n            <FormControlLabel\n              control={<Switch defaultChecked />}\n              label={\"Presente\"}\n            />\n          </FormGroup>\n          {/* <FormControl>\n            <RadioGroup\n              aria-label=\"gender\"\n              name=\"gender1\"\n              // value={value}\n              // onChange={handleChange}\n            >\n              <FormControlLabel\n                value=\"present\"\n                control={<Radio />}\n                label=\"Presente\"\n              />\n              <FormControlLabel\n                value=\"absent\"\n                control={<Radio />}\n                label=\"Ausente\"\n              />\n            </RadioGroup>\n          </FormControl> */}\n        </TableCell>\n      )\n    if (typeof row[`${header.att}`] === \"object\")\n      return (\n        <TableCell\n          className={getStyle(row)}\n          padding={\"none\"}\n          key={header.att}\n          size=\"small\"\n          align=\"center\"\n        >\n          <HtmlTooltip\n            interactive\n            placement=\"right\"\n            arrow\n            title={\n              <Grid container justify=\"space-between\">\n                <Grid item xs={2} container alignContent=\"center\">\n                  <IconButton\n                    onClick={() => {\n                      enqueueSnackbar(`Informaci√≥n copiada al portapapeles`, {\n                        variant: \"info\",\n                        autoHideDuration: 1000,\n                      })\n                      navigator.clipboard.writeText(\n                        row[`${header.att}`].toString().replaceAll(\",\", \" \")\n                      )\n                    }}\n                  >\n                    <Tooltip title=\"Copiar todos\">\n                      <FileCopyIcon color=\"primary\" fontSize=\"small\" />\n                    </Tooltip>\n                  </IconButton>\n                </Grid>\n                <Grid item xs={8}>\n                  {Object.keys(row[`${header.att}`]).map((seal) => {\n                    return (\n                      <Grid item>\n                        <Typography>* {row[`${header.att}`][seal]}</Typography>\n                      </Grid>\n                    )\n                  })}\n                </Grid>\n              </Grid>\n            }\n          >\n            <VisibilityIcon fontSize=\"small\" />\n          </HtmlTooltip>\n        </TableCell>\n      )\n    if (url === header.att) {\n      if (header.att === \"transport\" && row.transport.length > 7)\n        return (\n          <TableCell\n            className={getStyle(row)}\n            padding={\"none\"}\n            onClick={() => (selectable ? unselectLogic(row) : null)}\n            key={header.att}\n            size=\"small\"\n            align=\"center\"\n          >\n            <Link\n              className={classes.link}\n              underline=\"none\"\n              onClick={() => handleClick(row, header)}\n            >\n              <Typography noWrap>\n                {row[`${header.att}`].substring(0, 7)}\n              </Typography>\n            </Link>\n          </TableCell>\n        )\n      else\n        return (\n          <TableCell\n            className={getStyle(row)}\n            padding={\"none\"}\n            key={header.att}\n            size=\"small\"\n            align=\"center\"\n            onClick={() => (selectable ? unselectLogic(row) : null)}\n          >\n            <Link\n              className={classes.link}\n              underline=\"none\"\n              onClick={() => handleClick(row, header)}\n            >\n              <Typography noWrap>{row[`${header.att}`]}</Typography>\n            </Link>\n          </TableCell>\n        )\n    } else {\n      if (header.att === \"transport\" && row.transport.length > 7)\n        return (\n          <TableCell\n            className={getStyle(row)}\n            padding={\"none\"}\n            key={header.att}\n            size=\"small\"\n            align=\"center\"\n            onClick={() => (selectable ? unselectLogic(row) : null)}\n          >\n            <Typography noWrap>\n              {row[`${header.att}`].substring(0, 7)}\n            </Typography>\n          </TableCell>\n        )\n      else\n        return (\n          <TableCell\n            padding={\"none\"}\n            className={getStyle(row)}\n            size=\"small\"\n            key={header.att}\n            onClick={() => (selectable ? unselectLogic(row) : null)}\n            align=\"center\"\n          >\n            <Typography noWrap>{row[`${header.att}`]}</Typography>\n          </TableCell>\n        )\n    }\n  }\n\n  if (loading)\n    return (\n      <TableBody>\n        <TableRow>\n          <TableCell colSpan={`${newHeaders.length}`} align=\"left\">\n            <Loading tableLoading />\n          </TableCell>\n        </TableRow>\n      </TableBody>\n    )\n\n  if (!rows.length)\n    return (\n      <TableBody>\n        <TableRow>\n          <TableCell colSpan={`${newHeaders.length}`} align=\"left\">\n            <Typography> {emptyMessage} </Typography>\n          </TableCell>\n        </TableRow>\n      </TableBody>\n    )\n\n  return (\n    <TableBody>\n      {rows.map((row, index) => {\n        return (\n          <TableRow key={index}>\n            {newHeaders.map((header) => {\n              return renderUrl(row, header)\n            })}\n          </TableRow>\n        )\n      })}\n    </TableBody>\n  )\n}\n\nexport default DataTableBody\n","import React, { useMemo, useCallback } from \"react\"\nimport orderTableBasedOnIndex from \"utils/orderTableBasedOnIndex\"\nimport {\n  TableContainer,\n  Table,\n  TableRow,\n  TableCell,\n  Grid,\n  TablePagination,\n  TableFooter,\n} from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport useWidth from \"hooks/useWidth\"\nimport TableHeader from \"./DataTableHeader\"\nimport DataTableBody from \"./DataTableBody\"\n\nconst useStyle = makeStyles((theme) => ({\n  planningDetails: {\n    minHeight: \"80vh\",\n    maxHeight: \"80vh\",\n    border: \"1px solid silver\",\n    [theme.breakpoints.up(\"sm\")]: {\n      minHeight: \"70vh\",\n      maxHeight: \"70vh\",\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      minHeight: \"72vh\",\n      maxHeight: \"72vh\",\n    },\n  },\n  planning: {\n    minHeight: \"85vh\",\n    maxHeight: \"85vh\",\n    border: \"1px solid silver\",\n  },\n  tracking: {\n    border: \"1px solid silver\",\n    minHeight: \"55vh\",\n    maxHeight: \"55vh\",\n    [theme.breakpoints.up(\"sm\")]: {\n      minHeight: \"36vh\",\n      maxHeight: \"36vh\",\n    },\n    [theme.breakpoints.up(\"lg\")]: {\n      minHeight: \"60vh\",\n      maxHeight: \"60vh\",\n    },\n    [theme.breakpoints.up(\"xl\")]: {\n      minHeight: \"70vh\",\n      maxHeight: \"70vh\",\n    },\n  },\n  trackingDetails: {\n    border: \"1px solid silver\",\n    minHeight: \"20vh\",\n    maxHeight: \"20vh\",\n    [theme.breakpoints.up(\"sm\")]: {\n      minHeight: \"40vh\",\n      maxHeight: \"40vh\",\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      minHeight: \"20vh\",\n      maxHeight: \"20vh\",\n    },\n    [theme.breakpoints.up(\"lg\")]: {\n      minHeight: \"50vh\",\n      maxHeight: \"50vh\",\n    },\n  },\n  footerContainer: {\n    borderBottom: \"none\",\n  },\n  pagination: {\n    display: \"inline-flex\",\n    overflow: \"hidden\",\n  },\n}))\n\nconst DataTable = ({\n  rows,\n  url,\n  path,\n  headers,\n  emptyMessage,\n  height,\n  selected,\n  setSelected,\n  setPaginator,\n  paginatorSize,\n  paginatorCurrentPage,\n  paginatorTotalObjects,\n  sort,\n  loading,\n  selectable,\n}) => {\n  const [isSmallScreen] = useWidth()\n  const classes = useStyle()\n\n  let newHeaders = useMemo(\n    () => orderTableBasedOnIndex({ headers, url }),\n    [headers, url]\n  )\n\n  const getWidth = useCallback(() => {\n    const TABLE_SIZES = {\n      planningDetails: classes.planningDetails,\n      planning: classes.planning,\n      tracking: classes.tracking,\n      trackingDetails: classes.trackingDetails,\n    }\n\n    return TABLE_SIZES[height]\n  }, [\n    classes.planningDetails,\n    classes.planning,\n    classes.tracking,\n    classes.trackingDetails,\n    height,\n  ])\n\n  return (\n    <Grid item sm={12} container justify=\"space-around\">\n      <TableContainer className={getWidth()}>\n        <Table id=\"table-to-xls\" size=\"small\" stickyHeader>\n          <TableHeader\n            newHeaders={newHeaders}\n            sort={sort}\n            setPaginator={setPaginator}\n          />\n          <DataTableBody\n            rows={rows}\n            emptyMessage={emptyMessage}\n            selected={selected}\n            selectable={selectable}\n            url={url}\n            setSelected={setSelected}\n            newHeaders={newHeaders}\n            path={path}\n            loading={loading}\n          />\n        </Table>\n      </TableContainer>\n      <TableContainer>\n        <Table size=\"small\">\n          <TableFooter>\n            <TableRow>\n              <TableCell\n                colSpan={isSmallScreen ? 1 : `${headers?.length}`}\n                align=\"center\"\n                padding=\"none\"\n                className={classes.footerContainer}\n              >\n                {\"Mostrando \" + rows.length + \" resultados\"}\n                <TablePagination\n                  className={classes.pagination}\n                  size=\"small\"\n                  component=\"div\"\n                  align=\"center\"\n                  count={paginatorTotalObjects}\n                  page={paginatorCurrentPage}\n                  rowsPerPageOptions={[15, 35, 50, 100]}\n                  rowsPerPage={paginatorSize}\n                  onChangePage={(e, page) => {\n                    setPaginator(page, \"page\")\n                  }}\n                  onChangeRowsPerPage={(e) => {\n                    setPaginator(e, \"size\")\n                  }}\n                  labelRowsPerPage=\"Objetos PP:\"\n                />\n              </TableCell>\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </TableContainer>\n    </Grid>\n  )\n}\n\nexport default DataTable\n","import capitalizeWordsOnSentence from \"utils/capitalizeWordsOnSentence\"\nimport sortAnArrayOfObjectsBasedOnAttribute from \"../sortAnArrayOfObjectsBasedOnAttribute\"\n\nconst attendanceParser = (results) => {\n  let newResults = []\n\n  results?.forEach((pupil) => {\n    let newObject = {\n      name: capitalizeWordsOnSentence(\n        pupil.name.concat(\" \").concat(pupil.lastname)\n      ),\n      pupilId: pupil.id,\n      present: true,\n    }\n    newResults.push(newObject)\n  })\n\n  return newResults\n}\n\nexport default attendanceParser\n","import Home from \"Pages/Home\"\nimport Attendance from \"Pages/Attendance\"\n\nconst routes = [\n  {\n    id: \"home\",\n    route: \"/proyecto-veronica\",\n    public: true,\n    component: Home,\n    item: false,\n  },\n  {\n    id: \"attendance\",\n    route: \"/proyecto-veronica/attendance\",\n    public: true,\n    component: Attendance,\n    item: true,\n  },\n]\n\nexport default routes\n","import React, { useEffect, useMemo, useState } from \"react\"\nimport axios from \"axios\"\nimport pupilsHeaders from \"utils/constants/headers/pupilsHeaders\"\nimport DataTable from \"components/dataTable/DataTable\"\nimport attendanceParser from \"utils/parsers/attendanceParser\"\nimport {\n  Button,\n  CircularProgress,\n  FormControlLabel,\n  FormGroup,\n  Grid,\n  Switch,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@material-ui/core\"\nimport orderTableBasedOnIndex from \"utils/orderTableBasedOnIndex\"\nimport _ from \"lodash\"\nimport { DateTime } from \"luxon\"\nimport { useHistory } from \"react-router\"\n\nconst Attendance = () => {\n  const [pupils, setPupils] = useState([])\n  const [isDataLoading, setIsDataLoading] = useState(true)\n  let history = useHistory()\n\n  const fetchData = () => {\n    setIsDataLoading(true)\n    axios.get(\"https://18.231.156.63:8081/api/pupils\").then((res) => {\n      const { data } = res\n      setPupils(attendanceParser(data))\n    })\n    setIsDataLoading(false)\n  }\n  useEffect(() => {\n    fetchData()\n  }, [])\n\n  useEffect(() => {\n    console.log(\"rendering\")\n  }, [pupils])\n\n  const changeAttendance = (row) => {\n    let newPupil = pupils.find((pupil) => pupil.pupilId === row.pupilId)\n    newPupil.present = !newPupil.present\n    let newPupils = pupils\n    newPupils.splice(newPupils.indexOf(newPupil), 1)\n    newPupils.push(newPupil)\n    setPupils(_.sortBy(newPupils, \"pupilId\"))\n  }\n\n  const sendAttendance = () => {\n    axios\n      .post(\"https://localhost:8080/api/attendances\", {\n        listOfAttendance: pupils,\n        date: \"2019-20-20\",\n        subject: \"Lenguaje\",\n      })\n      .then(() => {\n        history.push(\"/\")\n      })\n  }\n\n  return (\n    <Grid container justify=\"center\">\n      <Grid item xs={12} container justify=\"center\">\n        <Typography>\n          Asistencia para el d√≠a: {DateTime.now().toLocaleString()}\n        </Typography>\n      </Grid>\n      <Grid item xs={8} style={{ marginTop: 20 }}>\n        <TableContainer>\n          <Table\n            id=\"table-to-xls\"\n            size=\"small\"\n            stickyHeader\n            style={{ border: \"1px solid silver\" }}\n          >\n            <TableHead>\n              <TableRow style={{ border: \"1px solid silver\" }}>\n                {pupilsHeaders.map((header) => {\n                  return (\n                    <TableCell\n                      // className={classes.head}\n                      key={header.att}\n                      // padding={\"none\"}\n                      align=\"center\"\n                      // sortDirection={evaluateSort(header) ? sort.order : false}\n                    >\n                      {/* <TableSortLabel\n                classes={{ root: classes.columnLabel }}\n                active={header.computed ? null : evaluateSort(header)}\n                direction={evaluateSort(header) ? sort?.order : \"asc\"}\n                onClick={() => handleClick(header)}\n              > */}\n                      <Typography variant=\"body1\">{header.label}</Typography>\n                      {/* </TableSortLabel> */}\n                    </TableCell>\n                  )\n                })}\n              </TableRow>\n            </TableHead>\n\n            <TableBody>\n              {isDataLoading ? (\n                <TableRow>\n                  <TableCell align=\"center\" colSpan={2}>\n                    <CircularProgress />\n                  </TableCell>\n                </TableRow>\n              ) : (\n                pupils.map((row) => {\n                  return (\n                    <TableRow key={row.pupilId}>\n                      <TableCell align=\"center\" padding={\"none\"}>\n                        <Typography variant=\"body2\">{row.name} </Typography>\n                      </TableCell>\n                      <TableCell align=\"center\" padding={\"none\"}>\n                        <FormControlLabel\n                          control={\n                            <Switch\n                              // color={row.present ? \"primary\" : \"default\"}\n                              style={\n                                row.present\n                                  ? { color: \"#d3e3b6\" }\n                                  : { color: \"#ff9b9b\" }\n                              }\n                              checked={row.present}\n                              onChange={() => changeAttendance(row)}\n                            />\n                          }\n                          // label={\n                          //   row.present ? (\n                          //     <Typography\n                          //       variant=\"body2\"\n                          //       style={{ color: \"green\" }}\n                          //     >\n                          //       Presente\n                          //     </Typography>\n                          //   ) : (\n                          //     <Typography\n                          //       variant=\"body2\"\n                          //       style={{ color: \"orange\" }}\n                          //     >\n                          //       Ausente\n                          //     </Typography>\n                          //   )\n                          // }\n                        />\n                      </TableCell>\n                    </TableRow>\n                  )\n                })\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <Grid item xs={12} container justify=\"center\" style={{ marginTop: 29 }}>\n          <Button variant=\"outlined\" onClick={() => sendAttendance()}>\n            Enviar\n          </Button>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default Attendance\n","import React from \"react\"\nimport PrivateRoute from \"auth/PrivateRoute\"\nimport { BrowserRouter, Switch } from \"react-router-dom\"\n// import Layout from \"components/layout/Layout\"\nimport routes from \"utils/routes.config\"\n\nconst Router = () => {\n  return (\n    <BrowserRouter>\n      {/* <Layout> */}\n      <Switch>\n        {routes.map((route) => {\n          return (\n            <PrivateRoute\n              exact\n              key={route.id}\n              publicAccess={route.public}\n              hasRole={route.hasRole}\n              path={route.route}\n              component={route.component}\n            />\n          )\n        })}\n      </Switch>\n      {/* </Layout> */}\n    </BrowserRouter>\n  )\n}\n\nexport default Router\n","import { createTheme } from \"@material-ui/core/styles\"\n\nconst mainApplicationTheme = createTheme({\n  shadows: [\"none\"],\n  props: {\n    MuiButtonBase: {\n      disableRipple: true,\n    },\n  },\n  zIndex: {\n    appBar: 1251,\n    modal: 1250,\n  },\n  typography: {\n    fontFamily: [\"Ubuntu\"].join(\",\"),\n    fontSize: 13,\n  },\n  palette: {\n    text: {\n      primary: \"#666666\",\n      secondary: \"#00000\",\n    },\n    primary: {\n      main: \"#008ecc\",\n    },\n    secondary: {\n      main: \"#333333\",\n    },\n  },\n})\n\nexport default mainApplicationTheme\n","import React from \"react\"\nimport { Provider } from \"react-redux\"\nimport { ThemeProvider } from \"@material-ui/core/styles\"\nimport { SnackbarProvider } from \"notistack\"\nimport Router from \"./Router\"\n// import defaultSTore from \"./defaultStore\"\nimport mainApplicationTheme from \"utils/mainApplicationTheme\"\n\n// const store = defaultSTore()\n\nfunction App() {\n  return (\n    // <Provider store={store}>\n    // <ThemeProvider theme={mainApplicationTheme}>\n    <SnackbarProvider\n      maxSnack={2}\n      transitionDuration={{ appear: 250, enter: 250, exit: 250 }}\n    >\n      <Router />\n    </SnackbarProvider>\n    // </ThemeProvider>\n    // </Provider>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}